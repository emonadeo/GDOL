package settings

import (
	"github.com/emonadeo/gdol/internal/util"
	"github.com/labstack/echo/v5"
)

// TODO: Breaks single source of truth generated by openapi philosophy
type UpdateListSettingsJSONRequestBody struct {
	AutoUnarchive *bool  `json:"auto_unarchive,omitempty"`
	MaxLength     *int16 `json:"max_length,omitempty"`
	// But neccessary for "null" vs "not set" workaround
	OverrideRequirementAfter util.JSONPatchInt16 `json:"override_requirement_after"`
}

func (api *api) updateSettings(c echo.Context) error {
	update := new(UpdateListSettingsJSONRequestBody)
	if err := c.Bind(update); err != nil {
		return err
	}

	if update.AutoUnarchive != nil {
		api.app.Store.List.Settings.AutoUnarchive = *update.AutoUnarchive
	}

	if update.MaxLength != nil {
		api.app.Store.List.Settings.MaxLength = *update.MaxLength
	}

	if update.OverrideRequirementAfter.Set {
		api.app.Store.List.Settings.OverrideRequirementAfter = update.OverrideRequirementAfter.Value
	}

	return c.NoContent(200)
}
